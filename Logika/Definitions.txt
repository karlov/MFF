Logika def

#define Useful_slides
	- [44, 51] (Modely v VL)
	- [51, 67] (Tablo v VL, trash)
	- [68, 82] (Dukazy Tablo VL)
	- [82, 89] (rezoluce v VL, trash)
	- [90] (Uplnost rezoluce)
	- [94] (Uplnost LI-rezoluce)
	- [95, 105] (trash)
	- [105, 113] (PL)
	- [116, 130] (Struktury, Teorie PL)
	- [133, 154] (Tablo PL, trash)
	- [155, 170] (Systematicke table PL, dukazy Tablo PL)
	- [171, 190] (Teorie v PL)
	- [191 - 205] (Rezoluce v PL, trash)
	- [205, 210] (dukazy Rezoluce v PL)
	- [211, 214] (trash)
	- [215, 233] (Struktury, rozsiritelnost o def apod.)
	- [234 - 255] (Ne bude v testu, trash) 
#undef Useful_slides

#define VL

	- CNF = (q1 ∨ ... ∨ qi) ∧ (p1 ∨ ... ∨ pl) ∧ ...
	- DNF = (q1 ∧ ... ∧ qi) ∨ (p1 ∧ ... ∧ pl) ∨ ...
	- Implikacni graf 
		Implikacní graf výroku 𝝋 v 2-CNF je orientovaný graf G𝝋, v nemž:
				i. vrcholy jsou promenné výroku 𝝋 nebo jejich negace
				ii. p ∨ q reprezentujeme hrany ⌐p → q, ⌐q → p
				iii. klauzule q reprezentujeme ⌐p → p
	- Teorie nad P je libovolna mnozina vyroku z VFp
	- Dusledek teorie T 𝛉P(T) = { 𝝋 ∈ VFp | T ⊨ 𝝋 }
	- TODO vlastnosti teorie printf("slajd 47");
	- TODO teorii nad konecne prvovyroky printf("slajd 49");
	- Dukaz je konecny objekt(kde definice Objektu???), muze vychazet z axiomu teorie
	- T ⊢ 𝝋 "𝝋 je dokazatelna z T"
	- 𝞇 ⊨ 𝝋, "plati 𝞇 -> 𝝋"
	- Korektni dukazovaci system: T ⊢ 𝝋 ⇒ T ⊨ 𝝋 TODO check //kazda dokazatelna formule je pravdiva
	- Uplny dukazovaci system:T ⊨ 𝝋 ⇒ T ⊢ 𝝋 TODO check //kazda pravdiva formule je dokazatelna
	- Systematicke tablo printf("slajd 68");
		Necht’ R je položka a T = {𝝋0, 𝝋1 ... } je (konecnáci nekonecná) teorie.
		(1) Za 𝞽0 vezmi atomické tablo pro R. Dokud to lze, aplikuj následující kroky.
		(2) Necht’ P je nejlevejší položka v co nejmenší úrovni již daného tabla 𝞽n,
			která není redukovaná na nejaké bezesporné v etvi procházející skrze P.
		(3) Za 𝞽`n vezmi tablo vzniklé z 𝞽n pridáním atomického tabla pro P na každou bezespornou vetev skrze P.
			(Neexistuje-li P, vezmi 𝞽`n = 𝞽n.)
		(4) Za 𝞽n+1 vezmi tablo vzniklé z 𝞽n pridáním T𝝋n na každou bezespornou vetev neobsahující T𝝋n. (Neexistuje-li 𝝋n, vezmi 𝞽n+1 = 𝞽`n .)

		Systematicke tablo 𝞽 = ∪𝞽n
	- Rezolucní strom klauzule C z formule S je konecný binární strom s vrcholy oznacenými klauzulemi takový, že
		i. koren je oznacen C,
		ii. listy jsou oznaceny klauzulemi z S,
		iii. každý vnitrní vrchol je oznacen rezolventou z klauzulí v jeho synech.
		'Pozorování C má rezolucní strom z S práve když S ⊢R C.'
	- 
#undef VL

#define PL
	- Systematicke tablo PL
		Necht’ R je položka a T = { 𝝋0, 𝝋1 ... } je (konecná ci nekonecná) teorie.
		(1) Za 𝞽0 vezmi atomické tablo pro R. V prípade (*) vezmi lib. c ∈ LC\L, v prípade (#) za t vezmi term t1. Dokud to lze, aplikuj následující kroky.
		(2) Necht’ v je nejlevejší vrchol v co nejmenší úrovni již daného tabla 𝞽n obsahující výskyt položky P, který není redukovaný na nejaké 
			bezesporné vetvi skrze v. (Neexistuje-li v, vezmi 𝞽`n = 𝞽n a jdi na (4))
		(3a) Není-li P tvaru T(∀x)𝝋(x) ani F(∃x)𝝋(x), za 𝞽`n vezmi tablo vzniklé z 𝞽n pridáním atomického tabla pro P na každou bezespornou vetev skrze v. 
			V prípade (*) za c vezmi ci pro nejmenší možné i.
		(3b) Je-li P tvaru T(∀x)𝝋(x) ci F(∃x)𝝋(x) a ve v má i-tý výskyt, za 𝞽`n vezmi tablo vzniklé z 𝞽n pripojením
			atomického tabla pro P na každou bezespornou vetev skrze v, pricemž za t vezmi term ti.
		(4) Za 𝞽n+1 vezmi tablo vzniklé z 𝞽`n pridáním T𝝋n na každou bezespornou vetev neobsahující T𝝋n. (Neexistuje-li 𝝋n, vezmi 𝞽n+1 = 𝞽`n)

		//(*) - atomicke tablo s novou konst
		//(#) - atomicke tablo s konst termem

		Systematicke tablo 𝞽 = ∪𝞽n
	- Kanonicky model
		Kanonický model z v etve V je LC -struktura A = hA, F^A, R^Ai,
		i. A je mnozina konstantních termu jazyka LC
		ii. f^A(ti1, ..., tin) = f(ti1, ..., tin) pro kazdy n-arni funkci symbol
		iii. R^A(ti1, ..., tin) ⇔ TR(ti1, ..., tin) je položka na V //R je relace nebo Rovnost

	break

	- Otevrena formule: neobsahuje zadny kvantifikator
	- Otevrena teorie: axiomy otevrene formule
	- Struktura 𝓐 shoduje s polozkou P.
		Pokud P je T𝝋 a 𝓐 ⊨ 𝝋,
		pokud P je F𝝋 a 𝓐 ⊨ ⌐𝝋
	- Struktura 𝓐 shoduje s vetvi V, prave když shoduje s kazdou polozkou V.
	- Kanonicky model s rovnosti je faktorstruktura 𝓐/=
		pro kazdou formuli 𝓐 ⊨ 𝝋 ⇔ (𝓐/=) ⊨ 𝝋
	- Mnozina Vět teorie T
		ThmL(T) = { 𝝋 ∈ FmL | T ⊢ 𝝋 }
	- Z korektnosti a uplnosti tablo metody vyplyva ze
		1. T ⊨ 𝝋 ⇔ T ⊢ 𝝋 //je dokazatelna ⇔ je pravdiva v T
		2. ThmL(T) = 𝛉L(T) //theoremy a dusledky je to same
		3. T je sporna ⇔ nema model
		4. T, 𝝋 ⊢ 𝞇 ⇔ T ⊢ 𝝋 ⇒ 𝞇 (Veta o dedukci)
	- Ekvisplnitelnost
		T, T` jsou Ekvisplnitelne jestlize T ma model ⇔ T` ma model
	- Otevřené jadro: 
	- Jsou-li všechny kvantifikatory ∀: je 𝝋 univerzalní formule
	- Otevřené jadro //TODO
	- Prenexni normalni tvar: vsechny kvantifikatory pred formuli
	- K teorii T najdeme ekvisplnitelnou T` nasl postupem:
		1. axiomy T nahradime za ekviv formule v PRENEXNIM tvaru
		2. prevedeme na Skolemove varianty
		3. Otevřené jadra formuli v 2. budou tvořit tu teorii T`
	- Skolemova varianta: nahradime všechny proměnné v ∃ za term Fi(x1 ... xn)
	- Pokud 𝝋` je Skolemova varianta formule 𝝋, tak 𝝋 a 𝝋` jsou ekvisplnitelne.
	- necht S = {E1, ... , En}
		Unifikace je substituce ∂, takova ze E1∂ = E2∂ = ... = En∂
		Unifikace ∂ pro S je nejobecnejsi unifikace (MGU). pokud pro kazdou unifikaci 𝞽 existuje substituce 𝞴 ze 𝞽 = ∂𝞴
		Jsou-li ∂ a 𝞽 dve MGU pro S -> lisi se pouze prejmenovanim promennych
	- Unifikacni alg
		Vstup Neprázdná (konecná) množina výrazu S.
		Výstup Nejobecn ejší unifikace 𝞂 pro S nebo “S není unifikovatelná”.

		(0) Necht’ S0 := S, 𝞂0 := ;, k := 0. (inicializace)
		(1) Je-li Sk singleton, vydej substituci 𝞂 = 𝞂0𝞂1 ... 𝞂k. //(mgu pro S)
		(2) Zjisti, zda v D(Sk) existuje promenná x a term t neobsahující x.
		(3) Pokud ne, printf("S není unifikovatelná")
		(4) Jinak 𝞂k+1 := {x/t}, Sk+1 := Sk𝞂k+1, k := k + 1 a jdi na (1).
		
	#define Rezoluce_PL
		- LI-rezoluce z formule S je linearni rezoluce z S,
			ve ktere kazda bocni klauzule Bi variantou klauzule ze vstupni formule S.
		- Fakt: Hornova klauzule {p}, kde p je pozitivni literal
		- Pravidlo je klauzule s jednim pozitivnim a aspon jednim negativnim literalem
		- Cil je klauzule bez pozitivniho literalu

	#undef Rezoluce_PL

#undef PL

#define Struktury

	- Teorie struktury 𝓐: je Mnozina sentenci platnych v 𝓐. Th(𝓐).
		1. Th(𝓐) je kompletni teorie
		2. Je-li 𝓐 ⊨ T, je Th(𝓐) (kompletni) extenze T
		3. Je-li 𝓐 ⊨ T ^ T je kompletni, Th(𝓐) je ekvivalenti s T -> Th(T) = 𝛉L(T)

		"Th(𝓐) je algoritmicky nerozhodnutelna"
	- Elementarni ekvivalence
		Th(𝓐) = Th(𝓑) //plati stejne formule jazyka
		<ℝ, ≤ > ≡ <ℚ, ≤ >
	- T je kompletni ⇔ az na elem ekvivalence ma jeden model
	- Teorie je rozhodnutelna //TODO
	- Lze-li efektivne(rekurzivne) pro danou teoii T jak vypadaji jeji kompletni extenze, je T (algoritmicky) rozhodnutelna
	- Teleso 𝓐 je algebraicky uzavrene pokud kazdy nenulovy polynom ma koren.
	- Bijekce h:A -> B je izomorfizmus struktur 𝓐 a 𝓑 pokud plati
		1. h(Fa(a1, ..., an)) = Fb(h(a1), ... , h(an)) //pro kazdy n-arni funkci symbol a kazde a1, ..., an ∈ A
		2. Ra(a1, ..., an) ⇔ Rb(h(a1), ..., h(an)) //pro kazdy n-arni relacni symbol a kazde a1, ..., an ∈ A
	- 𝓐 ≃ 𝓑 (izomofni) ⇒ 𝓐 ≡ 𝓑
	- pro kazde konecne struktury s rovnosti
		𝓐 ≡ 𝓑 ⇒ 𝓐 ≃ 𝓑 (izomofni) //obracena implikace
		"Ma-li kompletni teorie jazyka s rovnosti konecny model = jsou vsechny modely izomofni"
	- izomofni spektrum teorie T je pocet I(𝛋, T) navzajem neizomorfnich modelu T pro kazdou kardinalitu 𝛋 (velikost modelu???)
	- Teorie je 𝛋-kategoricka pokud ma az na izomorfizmus prave jeden model kardinality 𝛋, tj I(𝛋, T) = 1
	- Necht K ⊆ M(L) (podtřida modelu jazyka)
		K je axiomatizovatelna, pokud ∃ teorie T jazyka L s M(T) = K
		konecne axiomatizovatelna (konecna teorie)
		otevrene axiomatizovatelna (otevrena teorie)
		Teorie T je konecne(otevrene) axiomatizovatelna, pokud M(T) je konecne(otevrene) axiomatizovatelna
	- Definovatelne Mnoziny
		1. Mnozina definovatelna formuli 𝝋(X) ve strukture 𝓐 je mnozina
			𝝋^𝓐(X) = { a ∈ A^|X| | 𝓐 ⊨ 𝝋[e(X/a)] } //X, a jsou vektory
		2. Mnozina definovatelna formuli 𝝋(X, Y) s parametry B A^|Y| ve strukture 𝓐 je mnozina
			𝝋^𝓐,B(X) = { a ∈ A^|X| | 𝓐 ⊨ 𝝋[e(X/a, Y/b)] } //X, b, a jsou vektory

			//𝝋 = E(x,y), 𝝋^G,b(x,y) je mnozina sousedu vrcholu b v grafu G

	- Pro strukturu 𝓐, mnozinu B ⊆ A a n ∈ ℕ, oznacime
		Df^n(𝓐, B) tridu vsech definovatelnych mnozin ve strukture 𝓐 s parametrem B.
	- Mnozina A ⊆ ℕ je rekurzivni, pokud ∃ algoritmus, ktery pro kazdy vstup x ∈ ℕ skonci a zjisti zda x ∈ A.
	- Mnozina A ⊆ ℕ je rekurzivne spocetna, pokud ∃ algoritmus, ktery pro kazdy vstup x ∈ ℕ skonci prave kdyz x ∈ A.

#undef Struktury

#define Dukazy

	//TOOD
	1. Cantorova veta, Königovo lemma.
		a. "Množina M je menší velikostí, než jeji potenční množina" ("slajd 19")
			- f(y) = {y} pro y ∈ M je prostá funkce f : M -> P(M) (velikost M <= Velikost P(M))
			- Pro spor necht existuje prosta g : P(M) -> M
				Y = {g(Z) | Z ⊆ X ^ g(z) ∉ Z }, spor g(Z) ∉ Z pravě když g(Z) ∈ Z
		b. Každý nekonecný, konecne vetvící se strom T obsahuje nekonecnou vetev. ("slajd 22")
			Hledání nekonecné v etve zacneme v kořeni. Jelikož má jen konecne mnoho synu,
			existuje syn s nekonecne mnoha potomky. Vybereme ho a stejn e pokracujeme v jeho podstrom e.
			Takto získáme nekonecnou vetev.
	2. Algoritmy pro 2-SAT a Horn-SAT (dukaz korektnosti).
		a. ("slajd 38")
			Použijeme rozklad implikačniho grafu na silně souvislé komponenty.
			Implikacní graf výroku 𝝋 v 2-CNF je orientovaný graf G𝝋, v nemž:
				i. vrcholy jsou promenné výroku 𝝋 nebo jejich negace
				ii. p ∨ q reprezentujeme hrany ⌐p → q, ⌐q → p
				iii. klauzule q reprezentujeme ⌐p → p
			'Tvrzení' 𝝋 je splnitelný, práve když žádná silne souvislá komponenta v G𝝋 neobsahuje dvojici opacných literálu.
			Dukaz Každé splnující ohodnocení ohodnotí všechny literály ze stejné komponenty stejne. Implikace zleva doprava tedy platí.

			G*𝝋 graf vzniklý z G𝝋 kontrakcí silne souvislých komponent.

			algoritmus:
				pro každou komponentu v rostoucím poradí dle <(topologickeho usporadani), nejsou-li její literály dosud ohodnocené, nastav je na 0 a literály v opacné komponente na 1.

			Korektnost:
			Zbývá ukázat, že takto získané ohodnocení v splnuje 𝝋.
			Kdyby ne, existovaly by v G*𝝋 hrany p → q a ⌐q → ⌐p s v(p) = 1 a v(q) = 0.
			To je ve sporu s poradím nastavení komponent na 0 resp. 1, nebot’ p < q a ⌐q < ⌐p.
		b. ("slajd 41")
			Algoritmus:
			(1) obsahuje-li 𝝋 dvojici jednotkových klauzulí l a l, není splnitelný,
			(2) obsahuje-li 𝝋 jednotkovou klauzuli l, nastav l na 1, odstran všechny klauzule obsahující l, odstran l ze všech klauzulí a opakuj od zacátku,
			(3) neobsahuje-li 𝝋 jednotkovou klauzuli, je splnitelný ohodnocením 0 všech zbývajících promenných.

			(2) je jednotkova propagace, 𝝋` ziskany jedn propagaci je splnitelný ⇔ 𝝋 je splnitelný.

			"korektnost:"
			Korektnost 1. kroku je zrejmá, v 2. kroku plyne z pozorování, v 3.kroku díky Hornove tvaru, nebot’ každá zbývající klauzule obsahuje negativní literál.
	3. Tablo metoda ve VL: syst. tablo (dokoncenost, kon. dukazu), korektnost, úplnost.
		a.  "Pro každou teorii T a položku R je systematické tablo 𝞽 dokoncené."
			necht 𝞽 je systematické tablo z T = {𝝋0, 𝝋1 ... } s R v kořeni
			- vetev bezesporna v 𝞽 -> kazdy prefix v 𝞽n bezesporny
			- polozka neredukovana na vetvi v 𝞽 -> neredukovana na kazdem prefixu v 𝞽n
			- do urovne kazde polozka je v 𝞽 konecne polozek
			- Kdyby P byla neredukovana - alg by se nezastavil (krok 2, 3)
			- kazdy axiom na konci bude na vsech bezespornych vetvich (krok 4)
			- 𝞽 ma jen dokoncené vetve
		b. "Je-li 𝞽 = ∪𝞽n sporné tablo, je 𝞽n sporné konecné tablo pro nejaké n."
			- Necht’ S je množina vrcholu stromu 𝞽, jenž nad sebou neobsahují spor.
			- kdyby S nekonecna -> dle Königa tablo nekonecne (neni sporne tablo)
			- Vrcholy z S lezi do nejake urovni M -> pak kazdy vrchol od urovne (M + 1) ma nad sebou spor.
			- zvolme 𝞽n, že se shoduje s 𝞽 do urovne (M + 1) vcetne.
			- kazda vetev 𝞽n sporna.
			Dusledek dukaz je konecne tablo.
		c. korektnost
		"𝝋 je dokazatelna pomoci tabla v T -> T ⊨ 𝝋"
			//TODO lemma slajd 71

			- T ⊢ 𝝋 -> existuje sporne tablo s F𝝋 v kořeni.
			- Sporem 𝝋 neni pravdiva v T -> Existuje model-protipriklad
			- F𝝋 shoduje se s ohodnocenim 𝝑 -> dle lematu exustuje vetev shodujici s 𝝑 -> spor nebot kazda vetev je sporna.
		d. Uplnost
		"𝝋 je pravdiva v T -> je tablo dokazatelna"
			//TODO lemma slajd 73
			Necht’ 𝝋 je pravdivá v T. Ukážeme, že libovolné dokoncené tablo (napr. systematické) z teorie T s položkou F𝝋 v kořeni je sporné.
			- Sporem -> bezesporna vetev. Dle lemmatu existuje 𝝑 takove, ze Vetev V se shoduje s 𝝑, specialne s F𝝋 -> 𝝑(𝝋) = 0;
			- Vetev v je dokocnena, ma T𝝍 pro kazde 𝝍 z T -> 𝝑 je model T.
			- Spor s tim, ze 𝝋 plati v kazdem modelu T.
	7. Tablo metoda v PL: syst. tablo (dokon., kon. dukazu), význam axiomu rovnosti.
		a. "Pro každou teorii T a položku R je systematické tablo 𝞽 dokoncené."
			Necht 𝞽 je systematické Tablo s T = {𝝋0, 𝝋1 ... } s R v kořeni a P je polozka ve vrcholu Vrch.
			- Do úrovne Vrch (vcetn e) je v 𝞽 jen konecne mnoho výskytu všech položek.
			- Kdyby vyskyt P nebyl redukovany - alg se nezastavi (krok 2, 3a, 3b)
			- kazdy axiom na konci bude na vsech bezespornych vetvich (krok 4)
			Tedy systematické tablo ma pouze dokoncené vetve.
		b. "Je-li systematické tablo 𝞽 dukazem (z teorie T), je 𝞽 konecné."
			Kdyby bylo 𝞽 nekonecné, dle Königova lemmatu by obsahovalo nekonecnou vetev.
			Tato vetev by byla bezesporná, nebot’ pri konstrukci 𝞽 se sporné v etve neprodlužují. Pak by ale 𝞽 nebylo sporné.
		c. Necht’ A je struktura pro jazyk L, ve které je rovnost interpretovaná jako relace =^(A) splnující axiomy rovnosti, tj. ne nutne identita.
			//TODO axiomy rovnosti

			i. =^(A) je ekvivalence na A. (z axiomu 1, 3)
			ii. =^(A) je kongruence (z axiomu 2, 3)
			iii. Je-li A ⊨ T*, je i (A/=^(A)) ⊨ T*, kde A/=^(A) je faktorstruktura struktury A dle =^(A),
				pricemž rovnost je v A/=^(A) interpretovaná jako identita.
	8. Tablo metoda v PL: korektnost, kanonický model (s rovností), úplnost.
		a. korektnost
		"Pro každou teorii T a sentenci 𝝋, je-li 𝝋 tablo dokazatelná z T, je 𝝋 pravdivá v T, tj. T ⊢ 𝝋 -> T ⊨ 𝝋"
			- T ⊢ 𝝋 -> existuje sporne tablo s F𝝋 v kořeni.
			- Sporem 𝝋 neni pravdiva v T -> Existuje model-protipriklad
			- A shoduje se s polozkou F𝝋, dle lemmatu lze A expandovat do Lc tak, ze se shoduje s nekakou vetvi v tablu.
			- Spor, kazda vetev je sporna (obsahuje F𝝍 a T𝝍 pro nejakou formuli 𝝍)
		b. kanonický model (s rovností) //TODO
			Kanonický model z v etve V je LC -struktura A = hA, F^A, R^Ai,
			i. A je mnozina konstantních termu jazyka LC
			ii. f^A(ti1, ..., tin) = f(ti1, ..., tin) pro kazdy n-arni funkci symbol
			iii. R^A(ti1, ..., tin) ⇔ TR(ti1, ..., tin) je položka na V //R je relace nebo Rovnost
		c. Uplnost
			"Sentence 𝝋, teorie T. 𝝋 je pravdiva v T -> je tablo dokazatelna z T"
			Necht’ 𝝋 je pravdivá v T. Ukážeme, že libovolné dokoncené tablo (napr. systematické) z teorie T s položkou F𝝋 v kořeni je sporné.
			- Sporem -> bezesporna vetev. Dle lemmatu existuje struktura A pro jazyk Lc takova, ze Vetev V se shoduje s A, specialne s F𝝋 -> A ⊨ ⌐𝝋
			- A1 je redukt A na puvodni jaz L, plati A1 ⊨ ⌐𝝋
			- V je dokoncena, obsahuje T𝝍 pro kazde 𝝍 z T -> A1 je modelem T
			- Spor s tim, ze 𝝋 plati v kazdem modelu T.

	4. Veta o kompaktnosti VL a její dusledky
		a. "Teorie má model, práve když každá její konecná cást má model."
			Dukaz 1:(predpoklad konecnost, korektnost, uplnost)
				'->' zrejmá
				'<-' (Neprimo) T nema model -> je sporna (lze z ni dokazat ⊥) systematickym tablem.
					Tablo je konecne -> ⊥ je dokazatelný z nejake konecne T1 ⊆ T -> T1 nema model.

		b. "S má nekonecnou vetev, práve když T má model."
			Jelikož {𝝋i | i ∈ N} 𝝋 T má model pro každé n ∈ N, bude každá úroven v S neprázdná.
			Tedy S je nekonecný, navíc binární, a dle Königova lemmatu obsahuje nekonecnou vetev.
		c. "Spocetne nekonecný graf G = (V, E) je k-obarvitelný, práve když každý jeho konecný podgraf je k-obarvitelný." //ADSII NP-complete
			'->' zrejmá
			'<-' Necht’ každý konecný podgraf v G je k-obarvitelný. P = { Qu,i | u ∈ V, i ∈ k} a teorii s axiomy //WTF what is k?
				i. (Qu,0 ∨ ... ∨ Qu,k-1) //∀ u ∈ V
				ii. ⌐(Qu,i ∧ Qu,j) //∀ u ∈ V, i < j < k
				iii. ⌐(Qa,i ∧ Qb,i) //∀ {a, b} ∈ E, i < k
				G je k-obarvitelný, práve když T má model. Necht’ G1 je podgraf na vrcholech u takových, že Qu,i se vyskytuje v T1 pro nejaké i.
				Jelikož G1 je k-obarvitelný dle predpokladu, má T1 model.

	5. Rezoluce ve VL: korektnost, úplnost. LI-rezoluce (úplnost pro Horn. formule).
		a. "Je-li S rezolucí zamítnutelná, je S nesplnitelná."
			//TODO korektnost rezolucniho pravidla
			- Necht’ S ⊢R ⧠. Kdyby 𝝑 ⊨ S pro nejaké ohodnocení V, z korektnosti rezolucního pravidla by platilo i 𝝑 ⊨ ⧠, což není možné.
		b. Uplnost
			"Je-li konecná S nesplnitelná, je rezolucí zamítnutelná, tj. S ⊢R ⧠" //TODO

			Indukci dle poctu promenných:
			- Nemá-li nesplnitelná S žádnou promennou, je S = {⧠} tedy S ⊢R ⧠;
			- Necht’ l je literál vyskytující se v S. Dle lemmatu, S^(l) a S^(⌐l) jsou nesplnitelné.
			- Jelikož Sl a S^(⌐l) mají méne promenných než S, dle indukcního predpokladu existují rezolucní stromy T^(l) a T^(⌐l) pro odvození ⧠ z Sl resp. S^(⌐l) .
			- Je-li každý list T^(l) z S, je T^(l) rezolucním stromem ⧠ z S, tj. S ⊢R ⧠.
			- Pokud ne, doplnením literálu ⌐l do každého listu, jenž není z S, (a do všech vrchol u nad ním) získáme rezolucní strom {⌐l} z S.
			- Obdobne získáme rezolucní strom {l} z S doplnením l ve stromu T^(⌐l),
			- Rezolucí jejich korenu {⌐l} a {l} získáme rezolucní strom ⧠ z S.
		c.// TODO, slajd 94
		Úplnost LI-rezoluce pro Hornovy formule. LI-rezoluce (linear input) z formule S je lineární rezoluce z S, ve které je každá bocní klauzule Bi ze (vstupní) formule S.
			"Je-li Hornova T splnitelná a T ∪ {G} nesplnitelná pro cíl G, lze ⧠ odvodit LI-rezolucí z T ∪ {G} zacínající G."
			- Dle v ety o kompaktnosti mužeme predpokládat, že T je konecná.
			- Indukci dle poctu promenných v T
			- T obsahuje fakt {p} pro nejakou p //jinak splnitelna nastaveni vsech na 1 nebo 0
			- 
	11. Rezoluce v PL: korektnost, úplnost, lifting lemma, LI-rezoluce.
		a. "Je-li S rezolucí zamítnutelná, je S nesplnitelná."
			- Necht’ S ⊢R ⧠. Kdyby A ⊨ S pro nejakou strukturu A, z korektnosti rezolucního pravidla by platilo i A ⊨ ⧠, což není možné.
		b. Lifting Lemma //Rezolucní dukaz na úrovni VL lze "zdvihnout" na úroven PL.
			//TODO!!!
		c. Uplnost
			"Je-li konecná S nesplnitelná, je rezolucí zamítnutelná, tj. S ⊢R ⧠"
			Je-li S nesplnitelná, dle (dusledku) Herbrandovy vety je nesplnitelná i množina S1 všech základních instancí klauzulí z S.
			- dle uplnosti rezolucí metody v VL S1 ⊢R ⧠ (na urovni VL)
			- Dle predchozího dusledku existuje klauzule C a substituce 𝞂 taková, že ⧠ = C𝞂 a S ⊢R C (na úrovni PL).
			- Jediná klauzule, jejíž instance je ⧠, je klauzule C = ⧠.
		d. LI-rezoluce (“linear input”) z formule S je lineární rezoluce z S, ve které je každá bocní klauzule Bi variantou klauzule ze (vstupní) formule S.
			"Je-li Hornova T splnitelná a T ∪ {G} nesplnitelná pro cíl G, lze ⧠ odvodit LI-rezolucí z T ∪ {G} zacínající G."
			z Hildebrandove vety, stejne vety v LV a Lifting lemmatu.

	6. Sémantika PL: veta o konstantách, vlastnosti otevrených teorií, veta o dedukci //TODO
		a. Necht’ 𝝋 je formule jazyka L s volnými promennými x1; : : : ; xn a T je teorie jazyka L.
		Oznacme L1 rozšírení L o nové konstantní symboly c1, ..., cn a T1 teorii T nad jazykem L1. Pak
			"T ⊨ 𝝋 prave když T1 ⊨ 𝝋(x1/c1, ..., xn/cn)"

			'->' je-li A1 model T1, necht A reduckt A1 na L. A ⊨ 𝝋[e] pro kazde e ->
				A ⊨ 𝝋(x1/c1^A, ..., xn/cn^A) -> A1 ⊨ 𝝋(x1/c1, ..., xn/cn)
			'<-' je-li A model T a e ohodnoceni, A1 je expanze A na L1 o konstanty ci^A = e(xi) pro vsechna i.
				A1 ⊨ 𝝋(x1/c1, ..., xn/cn)[e1] pro libovolné e1 -> A1 𝝋(x1/c1^A, ..., xn/cn^A) -> A1 ⊨ 𝝋[e]
		b. "vlastnosti otevrených teorii"
			Tvrzení Pro každou otevrenou formuli 𝝋 a ohodnocení e : Var -> B platí
				B ⊨ 𝝋[e] ⇔ A ⊨ 𝝋[e], kde B je podstruktura A pro jazyk L.
				- Je-li 𝝋 atomická, plyne tvrzení z definice platnosti pri ohodnocení. Dále snadno indukcí dle struktury formule.
			dusledky
			i. Otevrená formule platí ve strukture A, práve když platí v každé podstrukture B ⊆ A.
			ii. Každá podstruktura modelu otevrené teorie T je modelem T. 
		c. Veta o dedukci "T, 𝝋 ⊢ 𝞇 ⇔ T ⊢ 𝝋 ⇒ 𝞇"  //TODO, where???

	9. Löwenheim-Skolemova veta. Veta o kompaktnosti PL a její dusledky //TODO
		a. "Každá bezesporná teorie T spocetného jazyka L bez rovnosti má spocetne nekonecný model." //slajd 173
			Necht’ 𝞽 je systematické tablo z T s F? v koreni. Jelikož je dokoncené a obsahuje bezespornou vetev V,
			nebot’ ? není dokazatelný z T, existuje kanonický model A z V . Jelikož se A shoduje s V,
			jeho redukt na jazyk L je hledaným spocetne nekonecným modelem T.

			'Poznámka Jde o slabou verzi tzv. Löwenheim-Skolemovy vety. Ve spocetném jazyce s rovností je kanonický model s rovností spocetný.'			
		b. "Teorie má model, práve když každá její konecná cást má model."
			'->' zrejmá
			'<-' Pokud teorie T nemá model, je sporná, tj. je z ní dokazatelný ⊥ systematickým tablem 𝞽.
			Jelikož je 𝞽 konecné, je ⊥ dokazatelný z nejaké konecné T1 ⊆ T, tj. T1 nemá model.
		c. //TODO
	10. Extenze o definice, Skolemova veta, Herbrandova veta.
		a. Teorie T1 jazyka L1 je extenze teorie T jazyka L o definice, pokud vznikla z T postupnou extenzí o definici relacního ci funkcního symbolu.
			//TODO
		b. "Každá teorie T má otevrenou konzervativní extenzi T*." //slajd 186

			Lze predpokládat, že T je v uzavreném tvaru. Necht’ L je její jazyk.
			- Nahrazením každého axiomu teorie T za ekvivalentní formuli v prenexním tvaru získáme ekvivalentní teorii T1
			- Nahrazením každého axiomu teorie T2 za jeho Skolemovu variantu získáme teorii T2 rozšíreného jazyka L2.
			- Redukt každého modelu teorie T2 na jazyk L modelem teorie T -> je T2 extenze T.
			- každý model teorie T lze expandovat na model teorie T2 -> je to extenze konzervativní.
			- každý axiom teorie T2 je univerzální sentence -> jejich nahrazením za otevrená jádra získáme otevrenou teorii T* ekvivalentní s T2.

		c. "Necht’ T je otevrená teorie jazyka L bez rovnosti a s alespon jedním konstantním symbolem. Pak:
			i. T má Herbranduv model, anebo
			ii. existuje konecne mnoho základních instancí axiomu z T, jejichž konjunkce je nesplnitelná, a tedy T nemá model"
			//slajd 189

			Necht’ M je množina všech základních instancí axiomu z T.
			Uvažme dokoncené (napr. systematické) tablo 𝞽 z T0 v jazyce L (bez pridávání nových konstant) s položkou F⊥ v kořeni.
				- Obsahuje-li tablo 𝞽 bezespornou vetev V, kanonický model z vetve V je Herbrandovým modelem teorie T.
				- Jinak je 𝞽 sporné, tj. M ⊢ ⊥. Navíc je konecné, tedy ⊥ je dokazatelný jen z konecne mnoha formulí M,
					tj. jejich konjunkce je nesplnitelná.

			//Herbrandovo univerzum pro L je množina všech konstantních termu z L.
			//Struktura A pro L je Herbrandova struktura, je-li doména A Herbrandovo
			//univerzum pro L a pro každý n-ární funkcní symbol f 2 F a t1; : : : ; tn 2 A,
			//f A(t1, ... tn) = f (t1, ..., tn)
			'Poznámka Na rozdíl od kanonické struktury nejsou predepsané relace'
			//Herbranduv model teorie T je Herbrandova struktura, jež je modelem T.

	
	12. Elementární ekvivalence, dusledky L.-S. vety. Izomorfismus a sémantika.
		a. Struktury A a B jazyka L jsou elementárne ekvivalentní, psáno A ≡ B, pokud v nich platí stejné formule (jazyka L), tj. Th(A) = Th(B).
			Pozorování Pro modely A; B teorie T platí A ≡ B, práve když Th(A), Th(B) jsou ekvivalentní (jednoduché kompletní extenze teorie T).
			//TODO this is definition where is proof?
		b. 
		c. 
	13. 𝔀-kategoricnost, podmínky pro konecnou a otevrenou axiomatizovatelnost.
		a. Teorie T je k-kategorická, pokud má až na izomorfismus práve jeden model kardinality k, tj. I (k, T) = 1.
			Veta w-kategorické kritérium kompletnosti, Necht’ jazyk L je spocetný.
			i. Je-li teorie T jazyka L bez rovnosti !-kategorická, je kompletní.
			ii. Je-li teorie T jazyka L s rovností !-kategorická a bez konecného modelu, je kompletní.
			- Každý model teorie T je elementárne ekvivalentní s nejakým spocetne nekonecným modelem T, ale ten je až na izomorfismus jediný.
				Tedy všechny modely T jsou elementárne ekvivalentní, tj. T je kompletní.

		b. "Necht’ K ⊆ M(L) a K = M(L) n K , kde L je jazyk. Pak K je konecne axiomatizovatelná, práve když K i K jsou axiomatizovatelné."
			'->' Je-li T konecná axiomatizace K v uzavreném tvaru, pak teorie s jediným axiomem (𝝋 z T) ⋁ ⌐𝝋 axiomatizuje K^c.
			'<-' Necht’ T, S jsou teorie jazyka L takové, že M(T) = K , M(S) = K .
				- Pak M(T ⋃ S) = M(T) ⋂ M(S) = ; a dle vety o kompaktnosti existují konecné T1 ⊆ T a S1 ⊆ S takové, že
					∅ = M(T1 ⋃ S1) = M(T1) ⋂ M(S1).
				- Jelikož M(T) ⊆ M(T1) ⊆ M(S1) ⊆ M(S) = M(T)
				- je M(T) = M(T1), tj. konecná T0 axiomatizuje K .
		c. "Je-li teorie T otevrene axiomatizovatelná, pak každá podstruktura modelu T je rovnež modelem T"
			Necht’ T1 je otevrená axiomatika M(T), A ⊨ T1 a B ⊆ A. Víme, že pro každé 𝝋 ∈ T1 je B ⊨ 𝝋, nebot’ 𝝋 je otevrená. Tedy B je modelem T1.
			'Poznámka Platí i obrácená implikace, tj. je-li každá podstruktura modelu teorie T rovnež modelem T, pak T je otevrene axiomatizovatelná.'
	14. Invariance definovatelných množin na automorfismy //TODO wtf
		//Ukážeme, že definovatelné množiny jsou invariantní vuci automorfismum.
		'Tvrzení Necht’ D ⊆ An je množina definovatelná ve strukture A z parametru b a h je automorfismus A, který je identický na b. Pak h[D] = D.'
		Necht D = 𝝋^(A, b)(x, y) pro vsechny vektory a ⊆ A^(|x|)
		a ∈ D ⇔ 𝓐 ⊨ 𝝋(e(x/a, y/b)) ⇔ 𝓐 ⊨ 𝝋(h*e(x/a, y/b)) ⇔ 𝓐 ⊨ 𝝋(e(x/ha, y/hb)) ⇔ 𝓐 ⊨ 𝝋(e(x/ha, y/b)) ⇔ ha ∈ D

#undef Dukazy

//Not in the test

- Necht jazyk L je rekurzivni
	Teorie T nad L je rozhodnutelna ⇔ Thm(T) rekurzivni. Jinak nerozhodnutelna